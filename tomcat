#!/bin/bash
#
# CBS -  Community BootUp Scripts
# Version: 0.1
# Author: Pedro Martins (ctools@webdetails.pt)
# Fedora Red Hat Compatibility
# chkconfig: 2345 95 05
# description: Start up the Tomcat servlet engine.
#
#
# Debian Ubuntu Compatibility
### BEGIN INIT INFO
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start up the Tomcat servlet engine
# Description:       Start and stop the Tomcat server with a Pentaho BI server
### END INIT INFO


# Source function library depending on OS flavour
if [ -e /etc/init.d/functions ];
then
  . /etc/init.d/functions
else 
  if [ -e /etc/rc.d/init.d/functions ]
  then
    . /etc/rc.d/init.d/functions
  fi
fi

# PENTAHO_HOME='/opt/pentaho'
# CATALINA_HOME='${PENTAHO_HOME}/pentaho-server/server'
# SHUTDOWN_WAIT=20
# TOMCATUSER="pentaho"
# SUDO='/bin/su'

PENTAHO_HOME='/pentaho'
CATALINA_HOME=${PENTAHO_HOME}/target-dist/server
SHUTDOWN_WAIT=20
TOMCATUSER="pmartins"
SUDO='/bin/su'


export JAVA_OPTS="-Xms2g -Xmx8g -XX:MaxPermSize=1g -Dfile.encoding=utf8 -Dnetworkaddress.cache.negative.ttl=10"


tomcat_pid() {
    echo `ps aux | grep org.apache.catalina.startup.Bootstrap | grep catalina.home=${CATALINA_HOME} | grep -v grep | awk '{ print $2 }'`
}


start() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo "Tomcat is already running (pid: $pid)"
  else
    # Start tomcat
    echo "Starting tomcat"
    currentUser=$(whoami)
    
    if [ $currentUser = $TOMCATUSER ]
    then
        $CATALINA_HOME/bin/startup.sh
    else
        $SUDO $TOMCATUSER $CATALINA_HOME/bin/startup.sh
    fi
  fi
  return 0
}


stop() {
  pid=$(tomcat_pid)
  currentUser=$(whoami)
  if [ -n "$pid" ];
  then
    echo "Stoping Tomcat"
    currentUser=$(whoami)
    if [ $currentUser = ${TOMCATUSER} ]
    then
#         $CATALINA_HOME/bin/shutdown.sh
	  echo "hello"
    else
        $SUDO $TOMCATUSER $CATALINA_HOME/bin/shutdown.sh
    fi        

    count=0;
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $SHUTDOWN_WAIT ]
    do
	echo -n -e "\nwaiting for processes to exit ( ${count} / ${SHUTDOWN_WAIT} )";
        sleep 1;
        ((count=$count+1));
    done
    if [ $count -gt $kwait ]; 
    then
        echo -n -e "\nkilling process $pid which didn't stop after $SHUTDOWN_WAIT seconds";
	if [ $currentUser = ${TOMCATUSER} ]
	then
	    kill -9 $pid
	else
	    $SUDO $TOMCATUSER kill -9
	fi        
        
    fi
  else
    echo "Tomcat is not running"
  fi
  return 0
}


status() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo "Tomcat is running with pid: $pid"
  else
    echo "Tomcat is not running"
  fi
  return 0
}

usage() {
  echo $"Usage: $0 {start|stop|status}"
  return 1  
}

# reading input

RETVAL=$?
case "$1" in
 start)
    start
	;;
 stop) 
    stop
 	;;
 status)
    status
	;;

 *)
    usage;
    RETVAL=1
	;;
esac

exit $RETVAL